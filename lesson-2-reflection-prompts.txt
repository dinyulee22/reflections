What happens when you initialize a repository? Why do you need to do it?

-Lets git know that I want a repository in the current directory so I can start using it


How is the staging area different from the working directory and the repository?
What value do you think it offers?

-Allows you to control which files go into a single commit
-Allows you to commit just the relevant files for the given commit


How can you use the staging area to make sure you have one commit per logical
change?

-Only add the files that are relevant to each commit


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

-developing a new feature while continuing to have a working app
-forking the project


How do the diagrams help you visualize the branch structure?

-They translate the list of letters and numbers into a visual description of what's going on


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

-The two branches become one branch
-Because that's what happens?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

-Automatic merging is easier, but could result in unexpected results when merging changes
for the same area of code
-Manual allows you to resolve conflicts, but requires more tinkering.
-Both could result in errors, but in different ways. Automatic is probably better if it's
just one person working on it. Manual is probably needed sometimes if multiple people are
working on one project/file.
