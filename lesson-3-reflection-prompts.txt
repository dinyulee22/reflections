When would you want to use a remote repository rather than keeping all your work
local?

-You want to back up your data off-site
-You want to collaborate with others remotely

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

-Something might change while you're working on it.
-You want predictable behavior, only changing things when you decide to.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

-Forks are a credited split off from an existing repository on github
  -Used when you want to continue someone else's project and make it your own 
-Clones are a copy of a repository on git
  -Used whenever you want to make a copy of a repository
-Branches are a split off within a repository
  -Used when you want to edit the project in some way seperate from the master branch

What is the benefit of having a copy of the last known state of the remote
stored locally?

-Useful for comparing what has changed since last time you synced up with github
-Can be used to help automatically merge files by comparing the previous state with
local changes and online changes

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

-Could have one person manage who's working on what file, having a shared drive or sending
files back and forth.
-Would be easier since people wouldn't have to learn git, but would be a lot more likely to
make mistakes.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

-When I'm working on something that will become a pull request
-When I'm working a new feature that I don't want to affect the production master branch
-More overhead with merging in branches, but more branches allow more people to work on the
same project at once.
